# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, simon
# This file is distributed under the same license as the Simon Blog package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Simon Blog \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-06 18:42+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0\n"

#: ../../source/technology-shares/2023/01.md:1 5596680742284204b754aaf4c8a318e8
msgid "A brief talk about Babel"
msgstr "浅谈 Babel"

#: ../../source/technology-shares/2023/01.md:3 4812886641c04d569c6c51b09dc7c329
msgid "What is Babel?"
msgstr "Babel 是什么 ？"

#: ../../source/technology-shares/2023/01.md:6 c9a4b39195294c44bfca152885681757
msgid ""
"`Babel` is a `JavaScript compiler` or a `compilation converter` from "
"**source code to target code**."
msgstr "`Babel` 就是一个 `JavaScript编译器` 或者也可以说是一个从**源码到目标代码**的`编译转换器`。"

#: ../../source/technology-shares/2023/01.md:8 7ba6edbfda854902b666989ed7e55f51
msgid "![](https://raw.githubusercontent.com/Simoon-F/simon-"
"blog/master/_static/2023/01/babel_image_1.png)"
msgstr "![](https://raw.githubusercontent.com/Simoon-F/simon-"
"blog/master/_static/2023/01/babel_image_1.png)"

#: ../../source/technology-shares/2023/01.md:10
#: 9c850ccbc2eb47deb2e4f1ee1a8315a0
msgid ""
"As you can see from this picture, `Babel` is divided into three stages, "
"namely `parse` (parsing), `transform` (conversion) and `generate` "
"(generation)."
msgstr "可以看这个图，`Babel` 分为三个阶段，分别是 `parse`（解析）, `transform`（转换）和 `generate` （生成）."

#: ../../source/technology-shares/2023/01.md:12
#: 5262428aaf3c4ac3962cf4070ccf3643
msgid ""
"First, start from the `source code` on the far left, which is the code we"
" write daily, which will be analyzed by `parse`. This `parse` process "
"will perform some analysis such as `lexical analysis` and `grammatical "
"analysis` on our code. The operation finally generates an abstract syntax"
" tree called `AST`."
msgstr "`Babel` 就是一个 `JavaScript编译器` 或者也可以说是一个从**源码到目标代码**的`编译转换器`。"


#: ../../source/technology-shares/2023/01.md:14
#: a66393da224c4e2b94a2ab9792b3e8f9
msgid ""
"Then come to `transform`, where the parsed content is processed according"
" to the rules we specified and converted into a new `AST` abstract syntax"
" tree."
msgstr "然后来到 `transform` 这里，将解析后的内容按照我们指定的规则进行处理转换成新的 `AST` 抽象语法树。"

#: ../../source/technology-shares/2023/01.md:16
#: 9c61fbae2ade499389d0e81a30c569fa
msgid ""
"Then come to `generate` and use our converted `AST` abstract syntax tree "
"to generate new code, which is the target code."
msgstr "然后在来到 `generate` 这里将我们转换后的 `AST` 抽象语法树去生成新的代码，也就是目标代码。"

#: ../../source/technology-shares/2023/01.md:18
#: 9e7ebd71a9e542bead7cc27d22d3862f
msgid "These are the approximate execution flow of `Babel`."
msgstr "这些就是 `Babel` 的大概执行流程。"

#~ msgid "浅谈 Babel"
#~ msgstr ""

#~ msgid "Babel 是什么 ？"
#~ msgstr ""

#~ msgid "`Babel` 就是一个 `JavaScript编译器` 或者也可以说是一个从**源码到目标代码**的`编译转换器`。"
#~ msgstr ""

#~ msgid ""
#~ "可以看这个图，`Babel` 分为三个阶段，分别是 `parse`（解析）, "
#~ "`transform`（转换）和 `generate` （生成）."
#~ msgstr ""

#~ msgid ""
#~ "首先是从最左边`源码`这里开始，也就是我们日常编写的代码，会经过 `parse` "
#~ "解析，这个`parse`过程会对我们的代码进行 `词法分析` 和 `语法分析` "
#~ "等一些解析操作最后生成一个叫 `AST` 的抽象语法树。"
#~ msgstr ""

#~ msgid "然后来到 `transform` 这里，将解析后的内容按照我们指定的规则进行处理转换成新的 `AST` 抽象语法树。"
#~ msgstr ""

#~ msgid "然后在来到 `generate` 这里将我们转换后的 `AST` 抽象语法树去生成新的代码，也就是目标代码。"
#~ msgstr ""

#~ msgid "这些就是 `Babel` 的大概执行流程。"
#~ msgstr ""

